services:
  nginx:
    image: nginx:1.25-alpine
    container_name: klynaa_nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - ai
    networks:
      - klynaa

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: klynaa_backend
    command: bash -lc "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    # For SQLite dev, backend can run without external DB/Redis
    networks:
      - klynaa

  frontend:
    profiles:
      - web
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: klynaa_frontend
    command: [ "sh", "-lc", "npm install && npm run dev" ]
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - klynaa

  mobile:
    profiles:
      - mobile
    build:
      context: ./mobile
      dockerfile: Dockerfile
    container_name: klynaa_mobile
    command: npm run start
    volumes:
      - ./mobile:/usr/src/app
    ports:
      - "19000:19000"
      - "19001:19001"
      - "19002:19002"
    networks:
      - klynaa

  ai:
    build:
      context: ./ai
      dockerfile: Dockerfile
    container_name: klynaa_ai
    command: uvicorn services.main:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - ./ai:/app
    networks:
      - klynaa

  blockchain:
    profiles:
      - web3
    build:
      context: ./blockchain
      dockerfile: Dockerfile
    container_name: klynaa_blockchain
    command: npm run dev
    volumes:
      - ./blockchain:/usr/src/app
    ports:
      - "8545:8545"
    networks:
      - klynaa

  postgres:
    profiles:
      - db
    image: postgres:15-alpine
    container_name: klynaa_postgres
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME}
      POSTGRES_USER: ${DJANGO_DB_USER}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Expose only when needed for integration
    # ports:
    #   - "5432:5432"
    networks:
      - klynaa

  redis:
    profiles:
      - db
    image: redis:7-alpine
    container_name: klynaa_redis
    ports:
      - "6379:6379"
    networks:
      - klynaa

networks:
  klynaa:
    driver: bridge

volumes:
  pgdata:
