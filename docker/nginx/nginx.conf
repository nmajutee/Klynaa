worker_processes 1;

events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  # Use Docker's embedded DNS so names resolve at request time, not only at startup
  resolver 127.0.0.11 ipv6=off valid=30s;

  server {
    listen 80;
  # Define upstream targets as variables within allowed context
  set $backend http://backend:8000;
  set $ai http://ai:8001;
  set $frontend http://frontend:3000;

    location /api/ {
      proxy_pass $backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /ai/ {
  # Strip the /ai prefix before proxying
  rewrite ^/ai/(.*)$ /$1 break;
  proxy_pass $ai;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
      proxy_pass $frontend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
