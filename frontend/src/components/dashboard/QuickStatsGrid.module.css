/**
 * QuickStatsGrid Component Styles
 * Scoped CSS modules using Klynaa design system tokens
 */

.statsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: var(--klynaa-space-4);
  margin-bottom: var(--klynaa-space-6);
}

@media (min-width: 768px) {
  .statsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 1024px) {
  .statsGrid {
    grid-template-columns: repeat(4, 1fr);
  }
}

/* Error Boundary Styles */
.errorBoundary {
  background: var(--klynaa-white);
  border: 1px solid var(--klynaa-error);
  border-radius: var(--klynaa-border-radius-lg);
  padding: var(--klynaa-space-6);
  text-align: center;
}

.errorIcon {
  width: 3rem;
  height: 3rem;
  color: var(--klynaa-error);
  margin: 0 auto var(--klynaa-space-4);
}

.errorTitle {
  font-size: var(--klynaa-font-size-lg);
  font-weight: var(--klynaa-font-weight-semibold);
  color: var(--klynaa-gray-900);
  margin-bottom: var(--klynaa-space-2);
}

.errorMessage {
  color: var(--klynaa-gray-600);
  margin-bottom: var(--klynaa-space-4);
}

.retryButton {
  background: var(--klynaa-primary);
  color: var(--klynaa-white);
  border: none;
  border-radius: var(--klynaa-border-radius-md);
  padding: var(--klynaa-space-2) var(--klynaa-space-4);
  font-weight: var(--klynaa-font-weight-medium);
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.retryButton:hover {
  background: var(--klynaa-primary-dark);
  transform: translateY(-1px);
}

.retryButton:focus {
  outline: 2px solid var(--klynaa-primary);
  outline-offset: 2px;
}

/* Loading State */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--klynaa-space-8);
  color: var(--klynaa-gray-500);
}

.loadingSpinner {
  width: 2rem;
  height: 2rem;
  margin-bottom: var(--klynaa-space-4);
  animation: spin 1s linear infinite;
}

.loadingText {
  font-size: var(--klynaa-font-size-sm);
  color: var(--klynaa-gray-500);
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}