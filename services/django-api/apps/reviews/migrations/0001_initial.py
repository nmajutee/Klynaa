# Generated by Django 4.2.23 on 2025-09-03 14:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("bins", "0002_pickuprequest_remove_bin_bins_bin_status_e3b5f1_idx_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        help_text="Rating from 1 to 5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("comment", models.TextField(help_text="Review comment")),
                (
                    "review_type",
                    models.CharField(
                        choices=[
                            ("worker_to_customer", "Worker to Customer"),
                            ("customer_to_worker", "Customer to Worker"),
                        ],
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pickup_request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="bins.pickuprequest",
                    ),
                ),
                (
                    "reviewed_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_received",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["reviewed_user", "rating"],
                        name="reviews_rev_reviewe_a8a1a4_idx",
                    ),
                    models.Index(
                        fields=["review_type"], name="reviews_rev_review__690232_idx"
                    ),
                ],
                "unique_together": {("reviewer", "pickup_request", "review_type")},
            },
        ),
        migrations.CreateModel(
            name="Dispute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dispute_type",
                    models.CharField(
                        choices=[
                            ("payment", "Payment Issue"),
                            ("service", "Service Quality"),
                            ("no_show", "No Show"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of the issue"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("investigating", "Under Investigation"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "resolution",
                    models.TextField(blank=True, help_text="Admin resolution notes"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "against_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disputes_against",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "filed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="disputes_filed",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "pickup_request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dispute",
                        to="bins.pickuprequest",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="disputes_resolved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["status"], name="reviews_dis_status_2bdfde_idx"
                    ),
                    models.Index(
                        fields=["dispute_type"], name="reviews_dis_dispute_741da0_idx"
                    ),
                ],
            },
        ),
    ]
