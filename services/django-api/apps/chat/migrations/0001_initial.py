# Generated by Django 4.2.7 on 2025-09-12 09:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bins', '0005_pickupproof_ai_verification_result_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms_as_owner', to=settings.AUTH_USER_MODEL)),
                ('pickup_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='chat_room', to='bins.pickuprequest')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_rooms_as_worker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('quick_reply', 'Quick Reply'), ('system', 'System Message'), ('status_update', 'Status Update')], default='text', max_length=20)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='chat_images/%Y/%m/%d/')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('client_message_id', models.CharField(blank=True, help_text='Client-side message ID for deduplication', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('chat_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='chat.chatroom')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuickReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('category', models.CharField(default='general', max_length=50)),
                ('usage_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-usage_count', 'text'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='chat_quickr_categor_daec4c_idx'), models.Index(fields=['usage_count'], name='chat_quickr_usage_c_49415e_idx')],
            },
        ),
        migrations.CreateModel(
            name='MessageReadReceipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='chat.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_read_receipts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['message'], name='chat_messag_message_23ce0b_idx'), models.Index(fields=['user', 'read_at'], name='chat_messag_user_id_f7c4bc_idx')],
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['chat_room', 'created_at'], name='chat_messag_chat_ro_bda5c0_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'created_at'], name='chat_messag_sender__b02346_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_id'], name='chat_messag_message_1cb7fe_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['client_message_id'], name='chat_messag_client__c0203a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_read'], name='chat_messag_is_read_872c73_idx'),
        ),
        migrations.AddConstraint(
            model_name='message',
            constraint=models.UniqueConstraint(condition=models.Q(('client_message_id__isnull', False)), fields=('chat_room', 'client_message_id'), name='unique_client_message_per_room'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['room_id'], name='chat_chatro_room_id_c3a3db_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['pickup_request'], name='chat_chatro_pickup__d0bcef_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['worker', 'is_active'], name='chat_chatro_worker__300157_idx'),
        ),
        migrations.AddIndex(
            model_name='chatroom',
            index=models.Index(fields=['owner', 'is_active'], name='chat_chatro_owner_i_f14aac_idx'),
        ),
    ]
