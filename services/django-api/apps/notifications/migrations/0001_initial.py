# Generated by Django 4.2.7 on 2025-09-11 21:39

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bins', '0004_bin_qr_code_image_bin_qr_code_uuid_pickupproof'),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('notification_type', models.CharField(choices=[('pickup_request', 'New Pickup Request'), ('pickup_assigned', 'Pickup Assigned'), ('pickup_started', 'Pickup Started'), ('pickup_completed', 'Pickup Completed'), ('payment_received', 'Payment Received'), ('payment_released', 'Payment Released'), ('bin_full', 'Bin Full'), ('system_alert', 'System Alert'), ('review_request', 'Review Request')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('action_url', models.URLField(blank=True, help_text='Deep link or web URL', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=10)),
                ('scheduled_for', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bins.bin')),
                ('pickup_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bins.pickuprequest')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_type', models.CharField(choices=[('push', 'Push Notification'), ('email', 'Email'), ('sms', 'SMS'), ('in_app', 'In-App')], max_length=10)),
                ('identifier', models.CharField(help_text='Email, phone, or device token', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_channels', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('pickup_request', 'New Pickup Request'), ('pickup_assigned', 'Pickup Assigned'), ('pickup_started', 'Pickup Started'), ('pickup_completed', 'Pickup Completed'), ('payment_received', 'Payment Received'), ('payment_released', 'Payment Released'), ('bin_full', 'Bin Full'), ('system_alert', 'System Alert'), ('review_request', 'Review Request')], max_length=20, unique=True)),
                ('title_template', models.CharField(max_length=100)),
                ('message_template', models.TextField()),
                ('email_subject_template', models.CharField(blank=True, max_length=200)),
                ('email_body_template', models.TextField(blank=True)),
                ('sms_template', models.CharField(blank=True, max_length=160)),
                ('enabled', models.BooleanField(default=True)),
                ('default_priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_push', models.BooleanField(default=True)),
                ('enable_email', models.BooleanField(default=True)),
                ('enable_sms', models.BooleanField(default=False)),
                ('enable_in_app', models.BooleanField(default=True)),
                ('pickup_notifications', models.BooleanField(default=True)),
                ('payment_notifications', models.BooleanField(default=True)),
                ('system_alerts', models.BooleanField(default=True)),
                ('marketing_notifications', models.BooleanField(default=False)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('quiet_start_time', models.TimeField(blank=True, null=True)),
                ('quiet_end_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationDelivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('provider_id', models.CharField(blank=True, help_text='Provider message/notification ID', max_length=100)),
                ('provider_response', models.JSONField(blank=True, default=dict)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationchannel')),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='notifications.notification')),
            ],
            options={
                'ordering': ['-attempted_at'],
                'indexes': [models.Index(fields=['notification', 'channel'], name='notificatio_notific_56b18b_idx'), models.Index(fields=['attempted_at'], name='notificatio_attempt_b08968_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['user', 'is_active'], name='notificatio_user_id_0e24f5_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationchannel',
            index=models.Index(fields=['channel_type', 'is_active'], name='notificatio_channel_8b6e30_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationchannel',
            unique_together={('user', 'channel_type', 'identifier')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_e285de_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='notificatio_notific_f2898f_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'status'], name='notificatio_priorit_27f109_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_for'], name='notificatio_schedul_cf7340_idx'),
        ),
    ]
